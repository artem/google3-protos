syntax = "proto2";

package gaia_mint;

import "gaia/client/account_restrictions.proto";
import "gaia/client/samesite_request_context.proto";
import "gaia/data/authsub.proto";
import "gaia/data/gaia_property.proto";
import "gaia/data/oauth/cloud_gaia_metadata.proto";
import "gaia/data/oauth/dasher_session_details.proto";
import "gaia/data/oauth/oauth_token_enums.proto";
import "gaia/data/oauth/scope_metadata.proto";
import "gaia/insclient/ins_clientinfo.proto";
import "identity/accountcapabilities/proto/capability_transport.proto";
import "identity/auxiliarydata/gaia_mint_auxiliary_data.proto";
import "identity/credentials/oauth/protos/credential_restriction.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";
import public "gaia/mint/protos/scope_options.proto";

option objc_class_prefix = "GMNT";
option java_multiple_files = true;
option java_outer_classname = "MintProtos";
option java_package = "com.google.gaia.mint";

message CookieInfo {
    optional bool persistent = 1;
    optional bool issued_with_https_continue = 3 [deprecated = true];
    optional bool programmatic_session = 6;
    optional bool was_auth_token = 7;
    optional int32 service_id = 10;
    optional string origin_domain_name = 11;
    optional int64 session_id = 13;
    optional bool inconsistent_1p_lsid = 14;
    optional gaia_client.SameSiteRequestContext sid_context = 15;
    
    reserved 2, 4, 5, 8, 9, 12;
}

message GaiaServiceData {
    optional GaiaKey key = 1;
    optional bytes data = 2;
}

message GaiaOAuthTokenInfo {
    optional gaia_data.DasherSessionDetails dasher_session_details = 10;
    optional gaia_data.AuthSubTokenRecordMatchPrototype match_prototype = 3;
    optional gaia_data.DeviceInfo device = 4 [deprecated = true];
    optional int64 expiration_time = 5;
    optional bool allowed_for_disabled_user = 6;
    optional gaia_data.DelegationTypeEnum token_delegation_type = 7;
    optional identity_oauth.CredentialRestriction credential_restriction = 9;
    optional gaia_data.ScopeResourceMap scope_resource_map = 11;
    optional gaia_data.ScopeValidityMetadata scope_validity_metadata = 12;
    
    reserved 1, 2, 8;
}

message GaiaMintUserCredential {
    optional int64 user_id = 1;
    optional int32 session_index = 24;
    optional int64 actual_user_id = 21;
    repeated GaiaMintUserCredential actual_user = 25;
    optional bool encrypted = 2;
    repeated int32 scope_code = 3;
    repeated int32 explicitly_requested_scope_code = 29;
    repeated string legacy_scope = 7;
    optional string application_domain = 5;
    optional int64 package_id = 9;
    repeated GaiaServiceData service_data = 6;
    repeated GaiaKey unset_service_data = 18;
    optional ClientUserInfo client_user_info = 10 [unverified_lazy = true];
    optional bool contains_gaia_groups = 12;
    optional int64 opl_id = 11;
    optional int64 auth_time_in_seconds = 13;
    optional uint32 seconds_since_last_auth = 26;
    optional int64 oauth_login_id = 19 [default = -1];
    optional int32 access_code_id = 20 [default = -1];
    optional bool name_lookup_failed = 14;
    optional string given_name = 15;
    optional string family_name = 16;
    optional GaiaOAuthTokenInfo gaia_oauth_token_info = 17;
    optional int32 session_type = 27;
    optional bool deleted = 28;
    optional string device_user_session_id = 30;
    optional bool oauth_session_upgraded = 31;
    optional bool is_tombstone = 32;
    optional gaia_data.CloudGaiaMetadata cloud_gaia_metadata = 33 [lazy = true];
    optional int64 expiration_time_in_seconds = 34;
    optional bool account_restrictions_enforced = 35;
    optional bytes aaa_session_id = 36;
    optional id.accountcapabilities.CapabilityTransport account_capabilities = 37;
    optional identity_auxiliarydata.GaiaMintAuxiliaryData auxiliary_data = 38;
    
    reserved 4, 8, 22, 23;
}

message InvalidGaiaMintUserCredential {
    optional GaiaMintUserCredential user = 1;
    optional InvalidSessionInfo invalid_session_info = 2;
    optional gaia_client.AccountRestrictionsStatus account_restrictions_status = 4;
    optional bool redacted_user_info = 5;
    
    reserved 3;
}

message InvalidSessionInfo {
    repeated int32 cookie_server_invalid_reason = 1;
}
