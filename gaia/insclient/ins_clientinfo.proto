syntax = "proto2";

import "frameworks/testing/rpcreplay/processors/rpc_replay_field_option.proto";
import "gaia/data/account_capabilities.proto";
import "gaia/data/accounttype/account_type.proto";
import "gaia/data/prefs.proto";
import "google/protobuf/timestamp.proto";
import "identity/datamodel/annotations/annotations.proto";
import "logs/proto/logs_annotations/logs_annotations.proto";
import "net/proto2/bridge/proto/message_set.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option cc_enable_arenas = true;
option java_package = "com.google.gaia.client.proto";

message GlobalTos {
    optional string RequestedLocation = 1;
    optional string RequestedLanguage = 2;
    optional string AgreedLocation = 3;
    optional string AgreedLanguage = 4;
    optional string Ip = 5;
    optional int64 Time = 6;
}

message GaiaCapabilityRecord {
    optional uint64 UserID = 1;
    optional uint64 CapabilityID = 11;
    required int32 Type = 2;
    optional string RedirectURL = 3;
    optional uint64 ExpirationTime = 4;
    optional uint64 RevokeTime = 12;
    optional string NewEmail = 5;
    optional string RecoveryEmail = 13;
    optional uint64 EmailChangeCapability = 6 [deprecated = true];
    optional uint64 ExerciseTime = 7;
    optional bool LoginAllowed = 8;
    optional bool NewEmailIsPrimary = 9;
    optional bool DeliveryDisabled = 10;
    optional bool RecoveryDisabled = 16;
    repeated int32 EmailAnnotation = 53;
    optional uint64 Reserved = 15;
    
    enum CapabilityType {
        NEW_ACCOUNT = 0;
        CHANGE_EMAIL = 1;
        REVOKE_EMAIL_CHANGE = 2;
        CHANGE_PASSWORD = 3;
        ADD_ALT_EMAIL = 4;
        UNKNOWN = 5;
    }
}

message AccountRecoveryCodes {
    enum DisableReasonType {
        UNKNOWN = 0;
        SPAMMING = 1;
        HIJACKING = 3;
        BROKE_TOS = 6 [deprecated = true];
        HARRASSMENT = 7;
        IMPERSONATION = 8 [deprecated = true];
        LEGAL = 9 [deprecated = true];
        ACCOUNT_MAINTENANCE = 12 [deprecated = true];
        PHISHING = 13;
        CHILD_PORN = 14;
        MALWARE = 20;
        OTHER = 22 [deprecated = true];
        UNDER_13 = 24;
        NUDITY = 25 [deprecated = true];
        INVESTIGATION_SECURITY = 27;
        DMCA = 28;
        DASHER_ADMIN_DISABLE = 29;
        SELF_MANAGED_REVERIFICATION = 30;
        CHILD_MISSING_PARENTAL_CONSENT = 31;
        BULK_ACCOUNT = 33;
        DISABLED_BY_OWNER = 34;
        PAYMENT_FRAUD_HIJACKING = 35;
        CHILD_OVER_GRADUATION_AGE = 36 [deprecated = true];
        LEGAL_EXPORT = 37;
        LEGAL_COURT_ORDER = 38;
        LEGAL_GOVERNMENT_ORDER = 39;
        TRAFFIC_PUMPING = 40 [deprecated = true];
        DECEASED_ACCOUNT_CLOSURE = 41;
        VIOLENT_EXTREMISM = 42 [deprecated = true];
        CONSUMER_TOS_ACK_PENDING = 43;
        ROBODIALING = 44 [deprecated = true];
        LEGAL_GAG_ORDER = 45 [deprecated = true];
        SOCIAL_ENGINEERING = 46 [deprecated = true];
        CSAI_CARTOON_HUMOR = 47 [deprecated = true];
        ALL_OWNERS_ARE_DISABLED = 48;
        TEMPORARY_ACCOUNT_EXPIRED = 49;
        CHILD_ENDANGERMENT = 50;
        ND4C_WITHDRAWAL = 51;
        INAPPROPRIATE_CONTENT_DISTRIBUTION = 52;
        COORDINATED_INTERFERENCE = 55;
        DETAINED_INDIVIDUAL = 56;
        UNQUALIFIED_EDU = 58;
        CHILD_SAFETY_SVIG = 59;
        DEPRECATED_REASON_2 = 2 [deprecated = true];
        DEPRECATED_REASON_4 = 4 [deprecated = true];
        DEPRECATED_REASON_5 = 5 [deprecated = true];
        DEPRECATED_REASON_10 = 10 [deprecated = true];
        DEPRECATED_REASON_11 = 11 [deprecated = true];
        DEPRECATED_REASON_15 = 15 [deprecated = true];
        DEPRECATED_REASON_16 = 16 [deprecated = true];
        DEPRECATED_REASON_17 = 17 [deprecated = true];
        DEPRECATED_REASON_18 = 18 [deprecated = true];
        DEPRECATED_REASON_19 = 19 [deprecated = true];
        DEPRECATED_REASON_21 = 21 [deprecated = true];
        DEPRECATED_REASON_23 = 23 [deprecated = true];
        DEPRECATED_REASON_26 = 26 [deprecated = true];
        DEPRECATED_REASON_32 = 32 [deprecated = true];
    }
    
    enum EnableActionType {
        ACTION_CAPTCHA = 0;
        ACTION_MANUAL = 1;
        ACTION_SMS = 2;
        ACTION_PARENTAL_CONTROLS = 3;
        ACTION_DOMAIN_ADMIN_RECOVERABLE = 4;
        ACTION_UNRECOVERABLE = 5;
        ACTION_WARNING = 6;
        ACTION_GRADUATE = 7 [deprecated = true];
        ACTION_ACKNOWLEDGE_CONSUMER_TOS = 8;
        ACTION_ENABLE_BY_OWNER = 9;
    }
}

message DisableAccountInfo {
    optional int32 ServiceID = 1;
    optional int64 Timestamp = 2;
    optional int32 DisableReason = 3;
    optional int32 RecoveryAction = 4;
    optional int64 RecoveryActionExpiration = 5;
    optional string Description = 6;
}

message EnableAccountInfo {
    optional int32 ServiceID = 1;
    optional int64 Timestamp = 2;
    optional int32 RecoveryAction = 3;
    optional string Description = 4;
    optional int32 EnableReason = 5;
}

message UserContext {
    optional bytes IP46 = 7;
    optional string AdminNotes = 4;
    repeated string PubsubKeywords = 5;
    optional int32 ServiceSuspendReason = 6;
    optional string locale = 8;
    optional string DeviceUserSessionId = 10;
    optional string UserAgent = 13;
    optional int64 ActingGaiaId = 14;
    optional int32 TriggerSource = 15;
    
    reserved 1 to 3, 9, 11, 12;
}

message QualifiedNameInfo {
    optional int32 Type = 1;
    optional string Name = 2;
    
    enum TypeEnum {
        TYPE_STANDARD = 1;
        TYPE_PHONE_NUMBER = 2;
        TYPE_MALFORMED_PHONE_NUMBER = 3;
        TYPE_ANONYMOUS_PHONE_NUMBER = 4;
    }
}

message ClientUserInfo {
    optional int64 UserID = 1;
    optional string Email = 2;
    optional QualifiedNameInfo QualifiedName = 169;
    
    repeated group EmailInfo = 11 {
        required string Email = 12;
        optional QualifiedNameInfo QualifiedName = 170;
        optional bool LoginAllowed = 85 [default = true];
        optional bool DeliveryDisabled = 90;
        optional bool IsXmppJid = 112 [deprecated = true];
        optional bool IsPublicId = 124 [deprecated = true];
        optional bool IsPrimaryId = 125;
        optional bool RecoveryDisabled = 149;
        optional bool IsShadow = 160;
        optional bool HasShadow = 161;
        optional bool FederatedAuthnEnabled = 163;
    }
    
    optional int64 LastAddedEmailTimestamp = 135;
    optional int64 LastRemovedEmailTimestamp = 136;
    
    repeated group Memberships = 22 {
        required int64 GroupID = 87;
        optional string Tag = 131;
        optional int64 AddTimeMS = 106;
    }
    
    optional bytes SerializedGroupMembershipInfo = 177;
    optional int64 Timestamp = 13;
    optional int64 PasswordTimestamp = 18;
    optional int64 ValidSessionTimestamp = 151;
    optional int64 RecoveryPromptTimestamp = 157;
    optional int64 RecoveryPromptCount = 159;
    optional bool DoForceRecoveryPrompt = 158;
    optional int64 CreationTime = 3;
    optional bool Verified = 4;
    optional int64 VerifiedTimestamp = 137;
    optional bool Disabled = 5;
    optional string DisabledReason = 40;
    optional DisableAccountInfo DisableInfo = 120;
    optional EnableAccountInfo EnableInfo = 121;
    optional bool LockedOut = 172 [deprecated = true];
    optional int64 PurgeTime = 129;
    optional bool IsNonUser = 145 [deprecated = true];
    optional int64 ServiceFlag = 8 [deprecated = true];
    
    repeated group ServiceInfo = 21 {
        required int32 ServiceId = 107;
        required int64 FlagBits = 108;
    }
    
    optional gaia_data.AccountType AccountType = 173 [deprecated = true];
    
    repeated group PreviousLogins = 9 {
        required int64 Time = 77;
        
        enum Const {
            NUM_LOGIN_KEPT = 3;
        }
    }
    
    optional int64 LastLoginGeocode = 14;
    optional int64 LastProgrammaticLoginTime = 164;
    optional string SecondaryPersonalEmail = 64;
    optional int64 SecondaryPersonalEmailModTime = 154;
    optional bool SecondaryEmailVerified = 176;
    optional GlobalTos GlobalTos = 20;
    optional string SecretQuestion_GSS_ONLY = 74;
    optional string SecretAnswer_GSS_ONLY = 75;
    optional int64 SecretQuestionModTime = 155;
    optional int64 SecretAnswerModTime = 156;
    optional GaiaUserPreferences Preferences = 79;
    
    repeated group ServiceFlagHistory = 80 {
        required int32 ServiceID = 81;
        required int64 Time = 82;
        required int32 ChangeType = 83;
    }
    
    optional bool CompressedServiceFlagHistory = 174;
    optional bool TruncatedServiceFlagHistory = 130;
    
    repeated group EmailHistory = 109 {
        required string Email = 110;
        required int64 Date = 111;
    }
    
    optional bool TruncatedEmailHistory = 171 [deprecated = true];
    repeated GaiaCapabilityRecord Capabilities = 119;
    
    repeated group RemovedMemberships = 114 {
        required int64 GroupID = 115;
        optional string Tag = 132;
        optional int64 AddTimeMS = 116;
        optional int64 RemoveTimeMS = 117;
    }
    
    optional GaiaCachedUserPreferences CachedPreferences = 84 [deprecated = true];
    optional bool DoForcePasswdChange = 86 [default = false];
    optional int32 ClusterScoreHigh = 144 [deprecated = true];
    optional int32 ClusterScore = 133 [deprecated = true];
    optional int32 SpamScore = 113 [deprecated = true];
    optional int32 SpamScoreBeta = 118 [deprecated = true];
    optional int32 SpamScoreBeta2 = 126 [deprecated = true];
    optional UserContext Ctx = 122;
    optional string CtxReq = 123;
    
    optional group IdvChallengeInfo = 146 {
        optional bool SmsVerified = 147;
        optional bool ClickToCallVerified = 153;
    }
    
    optional int64 CookieUserUpdateMicros = 168;
    
    reserved 6, 7, 10, 16, 17, 19, 50 to 63, 65 to 73, 76, 78, 88, 89, 91 to 105, 127, 128, 134, 138 to 143, 148, 152, 165 to 167, 175;
    
    enum Constants {
        SERVICE_FLAG_CACHE_NUM_BITS = 63;
    }
    
    enum FlagBitsEnum {
        REGISTERED = 0;
        SUSPENDED = 1;
        FORCE_HTTPS_CONTINUE = 2;
        FORCE_HTTPS_CONTINUE_SET_BY_USER = 3;
        DASHER_ADMIN_DISABLED = 4;
    }
    
    enum ServiceFlagChangeType {
        SERVICE_FLAG_ADDED = 1;
        SERVICE_FLAG_REMOVED = 2;
    }
    
    extend .proto2.bridge.MessageSet {
        optional ClientUserInfo message_set_extension = 2910452;
    }
}

message ClientData {
    optional string Username = 1;
    optional int32 Pid = 2;
    optional string TargetName = 3;
    optional string ProcessName = 4;
    optional int64 BuildTimestampAsInt = 5;
    optional string GaiaClientVersion = 6;
    optional string InstanceName = 9;
    optional int32 RetryCount = 11;
    optional string OriginatingUsername = 12;
    optional string OriginatingLocation = 14;
    optional string OriginatingJob = 15;
    
    optional ClientLibrary library = 16;
    enum ClientLibrary {
        UNSPECIFIED = 0;
        STUBBY_CALL = 1;
        SIMPLE_GAIA_CLIENT = 2;
        GAIA_EXTERNAL_CLIENT = 3;
    }
    
    optional int32 MaxTries = 13;
    optional bool SupportsCanonicalErrors = 17;
    
    reserved 7, 8, 10;
}

message DummyClientDataMessage {
    optional ClientData ClientData = 100;
}

message DummyUserDataMessage {
    optional UserContext UserContext = 101;
}

message ClientResourceInfo {
    required int64 Owner = 1;
    optional string Email = 2;
    
    repeated group EmailInfo = 8 {
        required string Email = 9;
    }
    
    optional int64 CreationTime = 3;
    optional int64 Timestamp = 4;
    
    repeated group ServiceInfo = 5 {
        required int32 ServiceID = 6;
    }
    
    optional GroupType GroupMemberships = 7;
    enum GroupType {
        UNKNOWN_GROUP_TYPE = 0;
        GAIA_ID = 1;
    }
    
    optional gaia_data.AccountCapabilityInfo AccountCapabilities = 10;
    optional google.protobuf.Timestamp PlaceholderLastRequestTime = 11;
}

message SecondFactorInfo {
    repeated group UserCookie = 1 {
        required int64 UserId = 2;
        required int64 IssueTime = 3;
        optional int64 ExpirationTime = 4;
        optional bool ExpireAtLogout = 5;
        optional int32 Epoch = 6;
        optional fixed64 Nonce = 8;
        
        reserved 9;
    }
    
    optional bool PersistentCookie = 7;
}

message GaiaNotificationSettings {
    required bool ShouldNotify = 1;
}
