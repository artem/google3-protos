syntax = "proto3";

package google.monitoring.v3;

import "google/api/annotations.proto";
import "google/api/auditing.proto";
import "google/api/client.proto";
import "google/api/field_behavior.proto";
import "google/api/policy.proto";
import "google/api/resource.proto";
import "google/api/slo.proto";
import "google/logging/data_governance.proto";
import "google/monitoring/v3/service.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "logs/proto/data_access/asr/cloud_monitoring_service_monitoring_resource.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option ruby_package = "Google::Cloud::Monitoring::V3";
option php_namespace = "Google\\Cloud\\Monitoring\\V3";
option csharp_namespace = "Google.Cloud.Monitoring.V3";
option go_package = "cloud.google.com/go/monitoring/apiv3/v2/monitoringpb;monitoringpb";
option java_multiple_files = true;
option java_outer_classname = "ServiceMonitoringServiceProto";
option java_package = "com.google.monitoring.v3";

service ServiceMonitoringService {
    rpc CreateService(CreateServiceRequest) returns (Service);
    rpc GetService(GetServiceRequest) returns (Service);
    rpc ListServices(ListServicesRequest) returns (ListServicesResponse);
    rpc UpdateService(UpdateServiceRequest) returns (Service);
    rpc DeleteService(DeleteServiceRequest) returns (protobuf.Empty);
    rpc UndeleteService(UndeleteServiceRequest) returns (Service);
    rpc PurgeService(PurgeServiceRequest) returns (protobuf.Empty);
    rpc CreateServiceLevelObjective(CreateServiceLevelObjectiveRequest) returns (ServiceLevelObjective);
    rpc GetServiceLevelObjective(GetServiceLevelObjectiveRequest) returns (ServiceLevelObjective);
    rpc ListServiceLevelObjectives(ListServiceLevelObjectivesRequest) returns (ListServiceLevelObjectivesResponse);
    rpc ListServiceLevelObjectiveVersions(ListServiceLevelObjectiveVersionsRequest) returns (ListServiceLevelObjectiveVersionsResponse);
    rpc UpdateServiceLevelObjective(UpdateServiceLevelObjectiveRequest) returns (ServiceLevelObjective);
    rpc DeleteServiceLevelObjective(DeleteServiceLevelObjectiveRequest) returns (protobuf.Empty);
    rpc BulkUpdate(BulkUpdateRequest) returns (BulkUpdateResponse);
}

message CreateServiceRequest {
    string parent = 1;
    string service_id = 3;
    Service service = 2;
}

message GetServiceRequest {
    string name = 1;
}

message ListServicesRequest {
    string parent = 1;
    string filter = 2;
    int32 page_size = 3;
    string page_token = 4;
    bool show_deleted = 5;
}

message ListServicesResponse {
    repeated Service services = 1;
    string next_page_token = 2;
}

message UpdateServiceRequest {
    Service service = 1;
    protobuf.FieldMask update_mask = 2;
}

message DeleteServiceRequest {
    string name = 1;
    bool dry_run = 2;
}

message UndeleteServiceRequest {
    string name = 1;
}

message PurgeServiceRequest {
    string name = 1;
}

message CreateServiceLevelObjectiveRequest {
    string parent = 1;
    string service_level_objective_id = 3;
    ServiceLevelObjective service_level_objective = 2;
}

message GetServiceLevelObjectiveRequest {
    string name = 1;
    ServiceLevelObjective.View view = 2;
}

message ListServiceLevelObjectivesRequest {
    string parent = 1;
    string filter = 2;
    int32 page_size = 3;
    string page_token = 4;
    ServiceLevelObjective.View view = 5;
}

message ListServiceLevelObjectivesResponse {
    repeated ServiceLevelObjective service_level_objectives = 1;
    string next_page_token = 2;
}

message ListServiceLevelObjectiveVersionsRequest {
    string parent = 1;
    string filter = 2;
    int32 page_size = 3;
    string page_token = 4;
    ServiceLevelObjective.View view = 5;
}

message ListServiceLevelObjectiveVersionsResponse {
    repeated ServiceLevelObjective slos = 1;
    string next_page_token = 2;
}

message UpdateServiceLevelObjectiveRequest {
    ServiceLevelObjective service_level_objective = 1;
    protobuf.FieldMask update_mask = 2;
}

message DeleteServiceLevelObjectiveRequest {
    string name = 1;
}

message BulkUpdateRequest {
    string parent = 1;
    
    ServiceSloState new_state = 2;
    message ServiceSloState {
        repeated ServiceLevelObjective slos = 1;
        api.SloRepoMetadata slo_repo = 2 [deprecated = true];
        SloRepoMetadata slo_repo_metadata = 3;
    }
    
    bool dry_run = 3;
}

message BulkUpdateResponse {
    repeated ChangeResult changes = 1;
    message ChangeResult {
        string resource_name = 1;
        ChangeType change = 2;
    }
    
    enum ChangeType {
        NONE = 0;
        CREATE = 1;
        UPDATE = 2;
        DELETE = 3;
    }
}
