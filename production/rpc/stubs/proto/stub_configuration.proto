syntax = "proto2";

package production.rpc.stubs.proto;

import "frameworks/server/proto/grpc_channel_config.proto";
import "net/loadshedding/proto/request_qos_overrides.proto";
import "net/proto2/bridge/proto/message_set.proto";
import "net/proto2/contrib/validator/annotations.proto";
import "net/rpc2/contrib/util/smart-service.proto";
import "production/rpc/stubs/proto/aggregation.proto";
import "production/rpc/stubs/proto/deadline_policies.proto";
import "production/rpc/stubs/proto/embedded_status_extraction.proto";
import "production/rpc/stubs/proto/hedging.proto";
import "production/rpc/stubs/proto/latency_based_deadline.proto";
import "production/rpc/stubs/routing/proto/traffic_routing_configuration.proto";
import "util/task/status.proto";

option java_outer_classname = "CanonicalStubConfigurationProto";
option java_package = "com.google.prod.rpc.stubs.proto";

message CanonicalStubConfiguration {
    optional string server_name = 1 [default = "anonymous_server"];
    
    optional TrafficType traffic_type = 20 [default = USER_FACING];
    enum TrafficType {
        USER_FACING = 0;
        BATCH = 1;
    }
    
    optional SmoothingType smoothing_type = 23;
    enum SmoothingType {
        NONE = 0;
        NORMAL = 1;
        MODERATE = 2;
        LINEAR = 3;
    }
    
    optional double smoothing_linear_acceleration = 25 [default = 0];
    optional net.loadshedding.RequestQoSOverrides request_qos_overrides = 22;
    optional bool enable_request_qos_overrides_for_batch = 33 [default = true];
    optional bool enable_monitoring = 14;
    repeated string hooks = 19;
    optional bool enable_query_origin = 8;
    optional string query_origin_prefix = 9 [default = "estubs"];
    optional string query_origin = 10;
    optional bool enable_client_side_throttling = 2;
    repeated .util.StatusProto application_specific_throttled_status = 3;
    repeated string client_side_throttlers = 18;
    optional HedgingConfiguration hedging = 21;
    optional LatencyBasedDeadlinePolicy default_latency_based_deadline_policy = 31;
    optional bool enable_retries = 4;
    repeated .util.StatusProto application_specific_retry_status = 5;
    optional bool batch_retry_all_internal_errors = 29;
    optional bool enable_shortest_allowed_deadline_seconds = 16;
    optional double shortest_allowed_deadline_seconds = 7 [default = 0.0001];
    optional bool enable_longest_allowed_deadline_seconds = 17;
    optional double longest_allowed_deadline_seconds = 11;
    optional PerRequestDeadlineConfiguration deadline_policies = 30;
    optional string transport = 15 [default = "Stubby"];
    optional RequestAggregator request_aggregator = 12;
    optional EmbeddedStatusExtractionConfiguration embedded_status_extraction = 28;
    
    oneof transport_configuration {
        .rpc2.contrib.SmartService smart_service = 6;
        frameworks.server.GrpcChannelConfig grpc_channel_config = 26;
        routing.proto.TrafficRoutingConfiguration traffic_routing_configuration = 32;
    }
    
    extensions 100 to max;
    
    reserved 13, 24, 27;
    
    extend .proto2.bridge.MessageSet {
        optional CanonicalStubConfiguration message_set_extension = 263716962;
    }
}
