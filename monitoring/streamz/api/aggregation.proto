syntax = "proto2";

package streamz;

import "google/protobuf/duration.proto";
import "monitoring/streamz/api/data_model.proto";
import "monitoring/streamz/api/hierarchical_isolation.proto";
import "net/base/qos.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option cc_enable_arenas = true;

service StreamzAggregation {
    rpc BulkWrite(BulkAggregateWriteRequest) returns (BulkAggregateWriteResponse);
    rpc ReadAggregationPolicies(ReadAggregationPoliciesRequest) returns (ReadAggregationPoliciesResponse);
}

message AggregateWriteRequest {
    required Entity entity = 1;
    repeated string target_schema_name = 3;
    repeated PointSet point_set = 2;
    optional HierarchicalIsolationRole isolation_role = 4 [deprecated = true];
}

message AggregateWriteResponse {
    
}

message BulkAggregateWriteRequest {
    repeated AggregateWriteRequest request = 1;
    optional HierarchicalIsolationRole isolation_role = 2;
    optional bool ignore_no_matching_target_families = 3;
    
    optional Source source = 4 [default = NOT_SET];
    enum Source {
        NOT_SET = 0;
        CENSUS = 1;
        GCM_API = 2;
        MONITORING_PROBERS = 3;
        PROBER_SERVICE = 4;
    }
}

message BulkAggregateWriteResponse {
    
}

message ReadAggregationPoliciesRequest {
    optional Entity entity = 1;
    repeated string metric_name = 2;
    optional fixed64 target_recipes_fingerprint = 3;
    optional fixed64 aggregation_policies_sequence_number = 4;
    
    repeated ExistingTargetInfo existing_target_info = 5;
    message ExistingTargetInfo {
        optional bytes target_key = 1;
        optional fixed64 schedules_fingerprint = 2;
    }
    
    optional HierarchicalIsolationRole isolation_role = 6;
}

message ReadAggregationPoliciesResponse {
    optional fixed64 target_recipe_fingerprint = 1;
    optional fixed64 aggregation_policies_sequence_number = 2;
    
    repeated TargetInfo target_info = 3;
    message TargetInfo {
        optional bytes target_key = 1;
        optional fixed64 schedules_fingerprint = 2;
        
        repeated Schedule schedule = 3;
        message Schedule {
            optional string metric_name = 1;
            optional google.protobuf.Duration sampling_period = 2;
            optional net_base.qos.TrafficClass traffic_class = 3;
        }
    }
}
