syntax = "editions";

package logging.proto;

import "monitoring/logging/base/proto/missing_data.proto";
import "perftools/tracing/proto/process_info.proto";
import "perftools/tracing/proto/tracecontext.proto";
import "privacy/ptoken/public/core/ptoken.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option java_package = "com.google.logging.proto";

message Event {
    optional string file_name = 2 [ctype = CORD];
    optional int32 file_line = 3;
    optional int64 time_nsecs = 4;
    optional int32 severity = 5 [default = 800];
    optional int64 thread_id = 6;
    optional string thread_name = 10 [ctype = CORD];
    optional int64 sequence_number = 9;
    repeated Value value = 7;
    optional RequestContext request_context = 8;
    repeated KeyValue log_context = 33;
    optional perftools.tracing.ProcessInfo process_info = 34 [deprecated = true];
    optional remote_debug_logging.MissingData missing_data = 35;
    
    extensions 1000 to 1100, 2000 to 2100;
    
    reserved 1;
}

message Value {
    oneof value {
        bytes str = 1 [ctype = CORD];
        bytes literal = 6 [ctype = CORD];
        int64 i64 = 2;
        uint64 u64 = 3;
        TaggedMessage proto = 10;
    }
    
    reserved 4, 5, 8, 15;
}

message TaggedMessage {
    optional string type_name = 1;
    optional bytes data = 2;
}

message RequestContext {
    optional perftools.tracing.TraceContextProto trace_context = 1;
    optional .ptoken.PToken ptoken = 2;
    optional bool should_redact_for_privacy_context = 3;
}

message KeyValue {
    optional string key = 1;
    optional Value value = 2;
}

message SymbolizedStackFrame {
    optional string fully_qualified_symbol_name = 1;
    optional int32 line_number = 2;
    optional string file_name = 3;
}

message SymbolizedStackTrace {
    repeated SymbolizedStackFrame stack_frames = 1;
    optional bool is_truncated = 2;
}

enum Severity {
    FINEST = 300;
    FINER = 400;
    FINE = 500;
    VERBOSE_0 = 600;
    CONFIG = 700;
    INFO = 800;
    NOTICE = 850;
    WARNING = 900;
    ERROR = 950;
    SEVERE = 1000;
    FATAL = 1100;
}

extend Event {
    optional SymbolizedStackTrace symbolized_stack_trace = 2004;
}
