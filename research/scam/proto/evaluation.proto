syntax = "proto2";

package research_scam;

message EvaluationConfig {
    optional bool use_flume_pipeline = 18 [default = true];
    optional string diff_wildcard = 9;
    optional double distance_tolerance = 6 [default = 1e-05];
    optional int32 num_query_sample_shards = 10 [default = 10];
    optional int32 num_evaluation_result_shards = 7 [default = 10];
    optional bool reuse_sampling_and_groundtruth = 8 [default = false];
    optional bool use_docids = 11 [default = false];
    optional string result_csv_filename = 12;
    
    optional HTMLVisualization html_visualization = 16;
    message HTMLVisualization {
        optional bool enabled = 1 [default = false];
        optional string visualization_filename = 2;
    }
    
    optional KMRCurve kmr_curve = 13;
    message KMRCurve {
        optional bool enabled = 1 [default = false];
        optional string output_location = 2;
        optional int32 num_pct_buckets = 3 [default = 1000];
        optional double pct_to_zoom = 4 [default = 20];
        optional int32 num_query_nearest_centroid_quantiles = 6 [default = -1];
        optional string query_ground_truth_partitions_output_location = 5;
    }
    
    optional AHRCurve ahr_curve = 14;
    message AHRCurve {
        optional bool enabled = 1 [default = false];
        optional string output_location = 2;
        optional int32 num_recall_curve_neighbors = 3 [default = -1];
        repeated double noise_shaping_thresholds = 4;
    }
    
    optional FPRCurve fpr_curve = 15;
    message FPRCurve {
        optional bool enabled = 1 [default = false];
        optional string output_location = 2;
        optional string evaluation_fpr_result_prefix = 3;
        optional int32 num_fpr_shards = 4 [default = 10];
    }
    
    optional string evaluation_query_prefix = 3;
    optional string evaluation_groundtruth_result_prefix = 4;
    optional string evaluation_approx_result_prefix = 5;
    optional int32 evaluation_sampling_seed = 2 [default = 1, deprecated = true];
    
    oneof SamplingFractionOrExpectedSize {
        float evaluation_sampling_fraction = 1;
        int32 expected_sample_size = 17;
    }
}
