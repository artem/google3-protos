syntax = "proto2";

package research_scam;

message TreeConfig {
    optional int32 max_leaf_size = 1 [default = 8];
    optional int32 max_leaf_nodes = 2;
    optional int32 max_distance_computations = 3;
    
    optional Searcher searcher = 4;
    enum Searcher {
        BACKTRACKING = 0;
        PRIORITY_QUEUE = 1;
    }
    
    optional KDTreeConfig kd_tree = 5;
    optional KMeansTreeConfig kmeans_tree = 6;
    optional VantagePointTreeConfig vantage_point_tree = 9;
    optional LinearProjectionTreeConfig linear_projection_tree = 10;
    optional bool build_contiguous_dataset = 8 [default = false];
}

message KDTreeConfig {
    optional DimensionSelector dimension_selector = 1 [default = VARIANCE];
    enum DimensionSelector {
        VARIANCE = 0;
        RANDOMIZED_VARIANCE = 1;
        MEDIAN_ABS_DEVIATION = 2;
        GAP = 3;
        INTERQUANTILE = 4;
    }
    
    optional float quantile_fraction = 2 [default = 0.5];
    optional int32 n_random = 3 [default = 5];
    optional int32 n_trees = 4 [default = 1];
}

message KMeansTreeConfig {
    required int32 k_per_level = 1;
    
    optional KMeansType k_means_type = 2 [default = GENERIC];
    enum KMeansType {
        GENERIC = 0;
        SPHERICAL = 1;
    }
}

message VantagePointTreeConfig {
    optional uint32 vantage_point_selection_sample_size = 1 [default = 100];
}

message LinearProjectionTreeConfig {
    optional ProjectionType projection_type = 1 [default = RANDOM];
    enum ProjectionType {
        PCA = 1;
        RANDOM = 2;
        BALL_TREE = 3;
    }
    
    optional uint32 max_training_datapoints = 2 [default = 0xffffffff];
}
