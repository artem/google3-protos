syntax = "proto2";

package borg;

import "borg/common/fs_dir.proto";
import "borg/common/pcpu.proto";

option cc_enable_arenas = true;

message CliqueSsdSpec {
    optional int64 size = 1;
}

message CliquePdSsdSpec {
    optional int64 size = 1;
}

message RemoteHddFsDirSpec {
    optional int64 size = 1;
    optional int64 memory = 3;
    optional float cpu_rate = 7;
    optional int64 milligcu = 5;
    optional Pcpu pcpu = 8;
    optional string name = 2;
    optional string charged_user = 11;
    optional string colossus_cell = 12;
    optional PrimaryFsDirEligible primary_eligible = 10 [default = UNSPECIFIED_ELIGIBILITY];
    
    reserved 4, 6, 9;
}

message RemoteSsdFsDirSpec {
    optional int64 size = 1;
    optional int64 memory = 3;
    optional float cpu_rate = 6;
    optional int64 milligcu = 5;
    optional Pcpu pcpu = 7;
    optional string name = 2;
    optional string charged_user = 8;
    optional string colossus_cell = 9;
    optional PrimaryFsDirEligible primary_eligible = 4 [default = UNSPECIFIED_ELIGIBILITY];
}

message RemoteResSpec {
    repeated CliqueSsdSpec clique_ssd = 1;
    repeated CliquePdSsdSpec clique_pd_ssd = 3;
    repeated RemoteHddFsDirSpec remote_hdd_fs_dir = 2;
    repeated RemoteSsdFsDirSpec remote_ssd_fs_dir = 4;
}

message CliqueSsdFreeCkpt {
    optional int64 size = 1;
    optional int64 allocation_increment = 2;
}

message CliquePdSsdFreeCkpt {
    optional int64 capacity = 1;
    optional int64 in_use = 2;
}

message RemoteResFree {
    optional CliqueSsdFreeCkpt clique_ssd = 1;
    optional CliquePdSsdFreeCkpt clique_pd_ssd = 2;
}

message RemoteHddFsDirAllocCkpt {
    optional int64 size = 1;
    optional int64 memory = 6;
    optional float cpu_rate = 8;
    optional int32 serving_port = 2;
    optional int32 status_port = 3;
    optional string name = 5;
    optional string charged_user = 9;
    optional string colossus_cell = 10;
    optional string universe = 4;
}

message RemoteSsdFsDirAllocCkpt {
    optional int64 size = 1;
    optional int64 memory = 6;
    optional float cpu_rate = 8;
    optional int32 serving_port = 2;
    optional int32 status_port = 3;
    optional string name = 5;
    optional string charged_user = 9;
    optional string colossus_cell = 10;
    optional string universe = 4;
}

message RemoteResAlloc {
    repeated RemoteHddFsDirAllocCkpt remote_hdd_fs_dir = 2;
    repeated RemoteSsdFsDirAllocCkpt remote_ssd_fs_dir = 4;
    
    reserved 1, 3;
}
