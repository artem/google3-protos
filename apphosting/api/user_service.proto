syntax = "proto2";

package apphosting;

option java_package = "com.google.apphosting.api";
option java_outer_classname = "UserServicePb";

message UserServiceError {
  enum ErrorCode {
    OK = 0;
    REDIRECT_URL_TOO_LONG = 1;
    NOT_ALLOWED = 2;
    OAUTH_INVALID_TOKEN = 3;
    OAUTH_INVALID_REQUEST = 4;
    OAUTH_ERROR = 5;
  }
}

message CreateLoginURLRequest {
  required string destination_url = 1;
  optional string auth_domain = 2;
  optional string federated_identity = 3;
}

message CreateLoginURLResponse {
  optional string login_url = 1;
}

message CreateLogoutURLRequest {
  required string destination_url = 1;
  optional string auth_domain = 2;
}

message CreateLogoutURLResponse {
  optional string logout_url = 1;
}

message GetOAuthUserRequest {
  optional string scope = 1;
  repeated string scopes = 2;
  optional bool request_writer_permission = 3;
}

message GetOAuthUserResponse {
  optional string email = 1;
  optional string user_id = 2;
  optional string auth_domain = 3;
  optional string user_organization = 4;
  optional bool is_admin = 5;
  optional string client_id = 6;
  repeated string scopes = 7;
  optional bool is_project_writer = 8;
}

service UserService {
  rpc CreateLoginURL(.apphosting.CreateLoginURLRequest) returns (.apphosting.CreateLoginURLResponse);
  rpc CreateLogoutURL(.apphosting.CreateLogoutURLRequest) returns (.apphosting.CreateLogoutURLResponse);
  rpc GetOAuthUser(.apphosting.GetOAuthUserRequest) returns (.apphosting.GetOAuthUserResponse);
}

