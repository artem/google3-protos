syntax = "proto2";

package security.credentials;

import "security/credentials/proto/authenticator.proto";
import "security/credentials/proto/end_user_credentials.proto";
import "security/credentials/proto/principal.proto";

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_outer_classname = "OriginalAuthorityProto";
option java_package = "com.google.security.credentials";

message OriginalAuthorityEndUserCredentialsProto {
    optional bytes target_service_identity_attributes = 2;
    optional LoggableCredentialOrigin credential_origin = 4;
    optional UserProto user = 5;
    repeated DataAccessReason data_access_reasons = 6;
    optional bool has_iam_authz_token = 7;
    optional EndUserCredentialsProto.AccessAssertion access_assertion = 8;
    
    reserved 1, 3;
}

message OriginalAuthority {
    optional SystemOperationInfo system_operation = 1;
    message SystemOperationInfo {
        
    }
    
    optional EndUserCredentialsProto end_user_creds = 2;
    optional OriginalAuthorityEndUserCredentialsProto original_authority_end_user_creds = 4;
    
    optional ImpersonatedOriginator impersonated_originator = 5;
    message ImpersonatedOriginator {
        optional OriginatorAuthentication originator_authentication = 1;
        enum OriginatorAuthentication {
            UNSPECIFIED = 0;
            GCS_SIGNED_REQUEST = 1;
            GCS_THINMINT = 2;
        }
    }
    
    repeated bytes iam_authority_info = 3;
    
    optional BorgInfo borg_info = 6;
    message BorgInfo {
        optional string borg_user = 1;
        optional string borg_job = 2;
    }
    
    optional EndpointInfo outgoing_endpoint_info = 7;
    message EndpointInfo {
        optional string service = 1;
        optional string method = 2;
    }
    
    optional EndpointInfo incoming_endpoint_info = 8;
    optional BorgInfo rpc_peer_borg_info = 9;
    
    optional ForwardingMetadata forwarding_metadata = 10;
    message ForwardingMetadata {
        optional CreationFunction creation_function = 1;
        optional ForwardingFunction forwarding_function = 2;
        optional ForwardingLanguage language = 3;
        optional bool auto_forwarded = 4;
    }
    
    repeated FromContextInfo from_context_info = 11;
    message FromContextInfo {
        optional BorgInfo borg_info = 1;
        optional EndpointInfo outgoing_endpoint_info = 2;
    }
    
    optional TruncationMetadata truncation_metadata = 12;
    message TruncationMetadata {
        optional TruncationOperation operation = 1;
        message TruncationOperation {
            optional TruncationLimitType truncation_limit_type = 1;
            optional int32 size_limit_bytes = 2;
        }
        
        optional TruncationDiff diff = 2;
        message TruncationDiff {
            optional int32 size_before_truncation_bytes = 1;
            optional int32 size_after_truncation_bytes = 2;
            optional int32 iteration_count = 3;
            repeated AuthenticatorProto.AuthenticatorType authenticators_truncated = 4 [packed = true];
            optional bool failure = 5;
        }
        
        enum TruncationLimitType {
            TRUNCATION_LIMIT_TYPE_UNSPECIFIED = 0;
            CUSTOM = 1;
        }
    }
    
    enum CreationFunction {
        UNSPECIFIED_CREATION_FUNCTION = 0;
        FROM_CONTEXT = 1;
        FROM_EUC = 2;
        FROM_SYSTEM_OPERATION = 3;
        FROM_BLOB = 4;
    }
    
    enum ForwardingFunction {
        UNSPECIFIED_FORWARDING_FUNCTION = 0;
        TO_EUC_RPCAUTHORITY = 1;
        TO_SELF_RPCAUTHORITY = 2;
        TO_RAW_EUC = 3;
        TO_BLOB = 4;
        TO_WITH_SECURITY_CONTEXT = 5;
        TO_REQUEST_REASON = 6;
    }
    
    enum ForwardingLanguage {
        UNSPECIFIED_LANGUAGE = 0;
        CPP = 1;
        JAVA = 2;
        GO = 3;
    }
    
    extend EndUserCredentialsProto {
        optional OriginalAuthority end_user_creds_original_authority = 7;
    }
}
