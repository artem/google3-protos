syntax = "proto2";

import "net/proto2/bridge/proto/message_set.proto";
import "security/credentials/proto/data_access_token_scope.proto";
import "security/credentials/proto/principal.proto";
import "security/data_access/proto/standard_dat_scope.proto";
import "security/thinmint/proto/thinmint.proto";
import "security/thinmint/proto/core/thinmint_core.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";
package security.credentials;

option java_package = "com.google.security.credentials";
option cc_enable_arenas = true;

message GaiaAuxCookiesProto {
  enum CookieOrigin {
    STANDARD = 0;
    COUNTRY_DOMAIN = 1;
  }
  optional .security.credentials.GaiaAuxCookiesProto.CookieOrigin cookie_origin = 1;
  optional string hsid_cookie = 2;
  optional string ssid_cookie = 3;
}

message GaiaServiceCookieProto {
  optional int32 service_id = 1;
  required string service_cookie = 2;
  optional int64 gaia_user_id = 3;
}

message LoggableGaiaServiceCookieProto {
  optional int32 service_id = 1;
  optional int64 gaia_user_id = 2;
}

message GaiaSidCookieProto {
  required string sid_cookie = 1;
  optional .security.credentials.GaiaAuxCookiesProto aux_cookies = 2;
  optional int64 gaia_user_id = 3;
}

message LoggableGaiaSidCookieProto {
  optional int64 gaia_user_id = 1;
}

message GaiaOsidCookieProto {
  optional string osid_cookie = 1;
  optional string origin_domain_name = 2;
  optional .security.credentials.GaiaSidCookieProto sid_cookie = 3;
  optional int64 gaia_user_id = 4;
}

message LoggableGaiaOsidCookieProto {
  optional string origin_domain_name = 1;
  optional int64 gaia_user_id = 2;
}

message AuthSubRequestProto {
  required string http_method = 1;
  required string http_request_url = 2;
  required string http_authorization_header = 3;
  optional string request_ip_address = 4;
  optional string query_and_post_params = 5;
  optional string full_api_name = 6;
}

message LoggableAuthSubRequestProto {
  required string http_method = 1;
}

message PostiniAuthTokenProto {
  required string postini_auth_token = 1;
}

message LoggablePostiniAuthTokenProto {
}

message LoggableGaiaExternalAuthenticatorProto {
}

message LoggableServiceControlTokenProto {
}

message InternalSsoTicketProto {
  required string internal_sso_ticket = 1;
}

message LdapGroupMembershipProto {
  required string ldap_group = 1;
  optional bool member = 2;
}

message LoggableInternalSsoTicketProto {
  optional bool parsable = 1;
  optional string user = 2;
  optional string domain = 3;
  optional string service_name = 4;
  optional int64 last_auth_time_ms = 5;
  optional string auth_type = 7;
  optional int32 auth_level = 8;
  repeated string member_group = 10;
  optional string auth_method = 6 [deprecated = true];
  repeated .security.credentials.LdapGroupMembershipProto membership_info = 9 [deprecated = true];
}

message TestingAuthenticatorProto {
  optional int32 artificial_auth_delay_ms = 1;
  optional .proto2.bridge.MessageSet attribute = 2;
}

message LoasRoleProto {
}

message SimpleSecretProto {
  required .security.credentials.SimpleSecretLabelProto label = 1;
  optional bytes secret = 2;
}

message CapTokenProto {
  optional bytes secret = 1;
}

message LoggableSimpleSecretProto {
}

message DataAccessReason {
  optional int64 buganizer_id = 1;
  optional int64 trax_id = 2;
  optional string manual_reason = 3;
  optional string auto_generated_reason = 11;
  optional string abuse_review_id = 4;
  optional int64 feedback_id = 5;
  optional int64 sem_id = 6;
  optional int64 guts_id = 7;
  optional int64 unify_id = 8;
  optional string cases_id = 9;
  optional string enterprise_pin = 10;
  optional string infame_incident_id = 12;
  optional int32 lis_matter_id = 13;
  optional int64 omg_id = 14;
  optional string outalator_id = 15;
  optional int64 payment_fraud_review_id = 16;
  optional int64 shax_id = 17;
  optional string payments_review_id = 18;
  optional string yt_flows_id = 19;
}

message DataAccessReasonRequestExtension {
  repeated .security.credentials.DataAccessReason reason = 1;
  extend .proto2.bridge.MessageSet {
    optional .security.credentials.DataAccessReasonRequestExtension message_set_extension = 77095000;
  }
}

message RequesterCredential {
  optional .security.credentials.AuthenticatorProto.AuthenticatorType authenticator_type = 1;
  optional .security.credentials.DataAccessTokenLoggingParams.Usage dat_usage = 2;
}

message DataAccessTokenLoggingParams {
  enum Usage {
    UNSPECIFIED = 1;
    MAPREDUCE = 2;
    ADMIN = 3;
    DEBUGGING = 4;
    UNATTENDED = 5;
    LOAD_TEST = 7;
    TRANSACTION = 6;
    ENTERPRISE_DELEGATION = 8;
  }
  required .security.credentials.PrincipalProto requester = 3;
  repeated .security.credentials.RequesterCredential requester_credential = 5;
  optional uint32 sensitivity_level = 1;
  repeated .security.credentials.DataAccessReason reason = 2;
  optional .security.credentials.DataAccessTokenLoggingParams.Usage usage = 4;
  optional string original_token_identifier = 6;
  optional bool log_use_to_gin = 8;
  extend .proto2.bridge.MessageSet {
    optional .security.credentials.DataAccessTokenLoggingParams message_set_extension = 16225877;
  }
}

message DataAccessTokenProto {
  required .thinmint.ThinMint thinmint = 1;
}

message LoggableDataAccessTokenProto {
  repeated .security.credentials.DataAccessReason reason = 2;
  optional .security.credentials.DataAccessTokenScope scope = 3;
  optional .security.data_access.StandardDatScopeProto standard_dat_scope = 7;
  optional int64 not_before = 4;
  optional int64 not_after = 5;
  optional string token_identifier = 6;
  optional string original_token_identifier = 9;
  optional .security.credentials.DataAccessTokenLoggingParams.Usage usage = 8;
  repeated .security.credentials.PrincipalProto delegate = 10;
  optional .security.credentials.PrincipalProto requester = 11;
  optional uint32 OBSOLETE_1 = 1;
}

message LoggableGaiaMintProto {
  message LoggableGaiaMintUserCredential {
    optional int64 user_id = 1;
  }
  message LoggableDatInfo {
    optional .security.credentials.DataAccessTokenLoggingParams.Usage usage = 1;
    optional string original_token_identifier = 2;
    optional .security.credentials.PrincipalProto requester = 3;
  }
  optional int64 primary_user_id = 1;
  repeated .security.credentials.LoggableGaiaMintProto.LoggableGaiaMintUserCredential loggable_credential = 2;
  optional int64 not_before_seconds = 3;
  optional int64 not_after_seconds = 4;
  optional .security.credentials.LoggableGaiaMintProto.LoggableDatInfo loggable_dat_info = 5;
}

message AuthenticatorProto {
  enum AuthenticatorType {
    NONE_REQUIRED = 0;
    GAIA_SERVICE_COOKIE = 1;
    GAIA_SID_COOKIE = 2;
    AUTHSUB_TOKEN = 3;
    POSTINI_AUTH_TOKEN = 4;
    INTERNAL_SSO_TICKET = 5;
    DATA_ACCESS_TOKEN = 6;
    TESTING = 7;
    LOAS_ROLE = 8;
    SIMPLE_SECRET = 9;
    GAIA_MINT = 10;
    CAP_TOKEN = 11;
    GAIA_OSID_COOKIE = 12;
    GAIA_EXTERNAL_AUTHENTICATOR = 13;
    SERVICE_CONTROL_TOKEN = 14;
    UNRECOGNIZED = 2147483646;
  }
  enum TypeMask {
    USER_TYPE_MASK = 13822;
  }
  optional .security.credentials.AuthenticatorProto.AuthenticatorType type = 1;
  oneof authenticator {
    .security.credentials.GaiaServiceCookieProto gaia_service_cookie = 2;
    .security.credentials.GaiaSidCookieProto gaia_sid_cookie = 3;
    .security.credentials.AuthSubRequestProto auth_sub_request = 4;
    .security.credentials.PostiniAuthTokenProto postini_auth_token = 5;
    .security.credentials.InternalSsoTicketProto internal_sso_ticket = 6;
    .security.credentials.DataAccessTokenProto data_access_token = 7;
    .security.credentials.TestingAuthenticatorProto testing_authenticator = 8;
    .security.credentials.LoasRoleProto loas_role = 13;
    .security.credentials.SimpleSecretProto simple_secret = 9;
    bytes gaia_mint_wrapper = 10;
    .security.credentials.CapTokenProto cap_token = 11;
    .security.credentials.GaiaOsidCookieProto gaia_osid_cookie = 12;
    bytes gaia_external_authenticator = 14;
    bytes service_control_token = 15;
  }
}

message LoggableAuthenticatorProto {
  optional .security.credentials.AuthenticatorProto.AuthenticatorType type = 1;
  oneof authenticator {
    .security.credentials.LoggableGaiaServiceCookieProto loggable_gaia_service_cookie = 2;
    .security.credentials.LoggableGaiaSidCookieProto loggable_gaia_sid_cookie = 3;
    .security.credentials.LoggableAuthSubRequestProto loggable_auth_sub_request = 4;
    .security.credentials.LoggablePostiniAuthTokenProto loggable_postini_auth_token = 5;
    .security.credentials.LoggableInternalSsoTicketProto loggable_internal_sso_ticket = 6;
    .security.credentials.LoggableDataAccessTokenProto loggable_data_access_token = 7;
    .security.credentials.LoggableGaiaMintProto loggable_gaia_mint = 10;
    .security.credentials.TestingAuthenticatorProto loggable_testing_authenticator = 8;
    .security.credentials.LoasRoleProto loas_role = 13;
    .security.credentials.LoggableSimpleSecretProto loggable_simple_secret = 9;
    .security.credentials.LoggableGaiaOsidCookieProto loggable_gaia_osid_cookie = 11;
    .security.credentials.LoggableGaiaExternalAuthenticatorProto loggable_gaia_external_authenticator = 14;
    .security.credentials.LoggableServiceControlTokenProto loggable_service_control_token = 15;
  }
}


