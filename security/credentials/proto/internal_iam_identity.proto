syntax = "proto2";

import "net/proto2/bridge/proto/message_set.proto";
import "security/context/proto/loggable_peer.proto";
import "security/credentials/proto/authenticator.proto";
import "security/credentials/proto/end_user_credentials.proto";
import "security/credentials/proto/iam_request_attributes.proto";
import "security/credentials/proto/principal.proto";
import "security/credentials/proto/service_control_context.proto";
import "security/loas/l2/proto/context.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";
package security.credentials;

option java_package = "com.google.security.credentials";

message InternalIAMLoggingMetadata {
  optional .security.context.LoggablePeerProto loggable_peer = 4;
  optional .security.credentials.UserProto originator = 5;
  repeated .security.credentials.DataAccessReason data_access_reason = 2;
  optional bool must_write_data_access_log = 3;
}

message InternalIAMContext {
  optional int64 principal = 1;
  optional string prod_username = 3;
  optional .security.credentials.IAMRequestAttributes attributes = 2;
  repeated string security_realms = 4;
  optional .security_loas_l2.InternalLoas2Context loas2_context = 5;
  optional .security.credentials.ServiceControlContext service_control_context = 6;
}

message InternalIAMIdentity {
  optional .security.credentials.InternalIAMContext i_am_using_iam_identity_incorrectly_iam = 1;
  optional .security.credentials.EndUserCredentialsProto i_am_using_iam_identity_incorrectly_euc = 2;
  optional .security.credentials.InternalIAMLoggingMetadata i_am_using_iam_identity_incorrectly_log = 3;
  extend .proto2.bridge.MessageSet {
    optional .security.credentials.InternalIAMIdentity message_set_extension = 74899390;
  }
}


