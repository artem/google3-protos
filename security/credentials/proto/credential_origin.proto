syntax = "proto2";

package security.credentials;

import "google/protobuf/timestamp.proto";
import "security/credentials/proto/cloud_gaia_authentication_method.proto";
import "security/credentials/proto/principal.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option cc_enable_arenas = true;
option java_multiple_files = true;
option java_outer_classname = "CredentialOriginProtoFile";
option java_package = "com.google.security.credentials";

message CredentialOrigin {
    repeated ServiceAccountDelegation service_account_delegations = 15;
    message ServiceAccountDelegation {
        optional bytes real_authority = 1;
        optional bytes service_identity_attributes = 2;
        optional bytes third_party_claim = 3;
        optional bytes internal_entity_id = 4;
        optional string principal_subject = 5;
        
        optional UseCase use_case = 6;
        enum UseCase {
            UNSPECIFIED_USE_CASE = 0;
            DOMAIN_WIDE_DELEGATION = 1;
        }
    }
    
    optional bytes target_service_identity_attributes = 16;
    
    optional AuthorityType authority_type = 9;
    enum AuthorityType {
        UNKNOWN_AUTHORITY = 0;
        USER_CREDENTIAL = 1;
        PROD_USER_CREDENTIAL = 4;
        INTERNAL_IMPERSONATION = 2;
        ENTERPRISE_IMPERSONATION = 3;
        CHILD_IMPERSONATION = 5;
    }
    
    optional DebugInfo debug_info = 13;
    message DebugInfo {
        optional string original_requester_role = 1 [deprecated = true];
        optional string original_requester_info = 2;
        optional string original_requester_borgcell = 3;
        optional string original_requester_security_realm = 4;
        optional CloudGaiaAuthenticationMethod cloud_gaia_authentication_method = 5;
    }
    
    optional UserProto originator = 14;
    optional UserProto original_requester = 18;
    optional google.protobuf.Timestamp create_time = 20;
    optional string client_ssl_certificate_hash = 22;
    optional string device_user_session_id = 23 [deprecated = true];
    
    repeated UserSessionInfo user_sessions = 26;
    message UserSessionInfo {
        optional int64 user_id = 1;
        optional string device_user_session_id = 2;
    }
    
    optional bytes cloud_session_properties = 27;
    
    optional OriginatingProduct originating_product = 28;
    message OriginatingProduct {
        optional int32 account_restrictions_service = 1;
        optional int32 pending_account_restrictions_service = 2;
    }
    
    oneof credential {
        Cookie cookie_info = 1;
        OAuth oauth_info = 2;
        FirstPartyAuth first_party_info = 3;
        Password password_info = 4;
        ServiceTrustMint service_trust_mint_info = 5;
        LoasRole loas_role_info = 6;
        InternalSso internal_sso_info = 7;
        UpTick up_tick_info = 19;
        EnterpriseImpersonation enterprise_impersonation_info = 8;
        PolicyBasedImpersonation policy_based_impersonation_info = 11;
        ChildImpersonation child_impersonation_info = 12;
        SelfSignedRobotJwt self_signed_robot_jwt_info = 17;
        ByoidCookie byoid_cookie_info = 24;
    }
    
    reserved 10, 21, 25;
    
    message Cookie {
        optional string osid_domain = 1;
    }
    
    message CorpAuthenticationData {
        optional bytes data = 1;
    }
    
    message OAuth {
        repeated int32 oauth_scope_code = 2;
        optional string client_id = 3;
        optional int64 package_id = 5;
        optional CredentialOrigin credential_origin = 6;
        
        reserved 1, 4;
    }
    
    message FirstPartyAuth {
        
    }
    
    message Password {
        
    }
    
    message ServiceTrustMint {
        optional string policy_name = 1;
        optional string loas_requester = 2;
    }
    
    message LoasRole {
        optional MdbUserProto mdb_user = 1;
        repeated MdbUserProto additional_mdb_users = 2;
    }
    
    message ChildImpersonation {
        optional CredentialOrigin credential_origin = 1;
    }
    
    message InternalSso {
        optional string user = 1;
        optional string domain = 2;
        optional string service_name = 3;
        repeated string member_group = 4;
        optional CorpAuthenticationData authn_data = 5;
    }
    
    message UpTick {
        optional int32 tier = 1;
        optional string email = 2;
        optional int64 prod_gaia_id = 3;
        optional int64 gaia_id = 4;
        optional string host = 5;
        
        optional IdentityType type = 6;
        enum IdentityType {
            UNSPECIFIED_IDENTITY_TYPE = 0;
            PROD = 1;
            GAIA = 2;
        }
        
        optional CorpAuthenticationData authn_data = 7;
        optional string up_service_ticket_hash = 8;
        optional string client_certificate_hash = 9;
    }
    
    message EnterpriseImpersonation {
        optional bytes real_authority = 1;
        optional CredentialOrigin credential_origin = 2;
    }
    
    message PolicyBasedImpersonation {
        optional bytes real_authority = 1;
        optional CredentialOrigin credential_origin = 2;
    }
    
    message SelfSignedRobotJwt {
        optional string key_id = 1;
        optional bool exported_key = 2;
    }
    
    message ByoidCookie {
        optional string origin = 1;
    }
}
