syntax = "editions";

package security_loas_l2;

import "borg/common/internal_confidential_mode_config.proto";
import "net/proto2/bridge/proto/message_set.proto";
import "security/credentials/proto/principal.proto";
import "security/loas/l2/proto/common.proto";
import "security/loas/l2/proto/credstype.proto";
import "security/loas/l2/proto/identity_types.proto";
import "security/loas/l2/proto/instance.proto";
import "security/loas/l2/proto/usertype.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";
import "third_party/protobuf/cpp_features.proto";

message MasterCertificate {
    repeated uint64 revocation_ids = 1;
    
    extend .proto2.bridge.MessageSet {
        optional MasterCertificate message_set_extension = 43796541;
    }
}

message MachineCertificate {
    optional string fqdn = 2;
    optional MachineCertDigest corp_machine_cert_digest = 3;
    optional ZammSMTLoas3CertDigest zamm_smt_loas3_cert_digest = 4;
    
    extensions 1;
    
    extend .proto2.bridge.MessageSet {
        optional MachineCertificate message_set_extension = 43673850;
    }
}

message RoleCertificate {
    repeated uint64 revocation_ids = 1;
    optional security.credentials.PrincipalProto primary = 2;
    repeated string security_realms = 3;
    optional UserType user_type = 6 [default = USER_TYPE_UNSPECIFIED];
    optional CredentialsType creds_type = 7 [default = CREDS_TYPE_UNSPECIFIED];
    
    reserved 5, 4;
    
    reserved "is_emergency";
    
    extend .proto2.bridge.MessageSet {
        optional RoleCertificate message_set_extension = 43526055;
    }
}

message ProcessCertificate {
    optional string local_username = 2;
    
    extensions 1;
    
    extend .proto2.bridge.MessageSet {
        optional ProcessCertificate message_set_extension = 41317618;
    }
}

message RekeHandshakeParameters {
    repeated HandshakeCipher ciphers = 1;
    optional bytes serialized_public_key = 2;
}

message RekeCertificate {
    repeated uint64 revocation_ids = 1;
    repeated RekeHandshakeParameters handshake = 2;
    
    reserved 3, 4;
    
    reserved "protocol", "next_protocol";
    
    extend .proto2.bridge.MessageSet {
        optional RekeCertificate message_set_extension = 26605557;
    }
}

message BorgMasterCertificate {
    optional bool resumable = 1;
    optional string cell = 2;
    
    extend .proto2.bridge.MessageSet {
        optional BorgMasterCertificate message_set_extension = 44423886;
    }
}

message BorgTaskCertificate {
    optional bool resumable = 1;
    optional string jobname = 2;
    optional int32 id = 3;
    optional int64 epoch = 4;
    optional string fqdn = 5;
    optional InstanceInfo instance_info = 6;
    optional bool resumable_instance_info = 9;
    optional string virtual_cell = 10;
    optional borg.InternalConfidentialModeConfig.SecurityLevel confidential_security_level = 11;
    
    reserved 7, 8;
    
    extend .proto2.bridge.MessageSet {
        optional BorgTaskCertificate message_set_extension = 44454843;
    }
}

message UserCertificateComment {
    optional string role = 1;
    
    extend .proto2.bridge.MessageSet {
        optional UserCertificateComment message_set_extension = 86999188;
    }
}

message EmergencyCertificate {
    optional string role = 1;
    
    extend .proto2.bridge.MessageSet {
        optional EmergencyCertificate message_set_extension = 62148510;
    }
}

message SelfSignedCertificateComment {
    optional bool is_self_signed = 1;
    
    extend .proto2.bridge.MessageSet {
        optional SelfSignedCertificateComment message_set_extension = 45813468;
    }
}
