syntax = "editions";

package secure_collection;

import "google/protobuf/any.proto";

option java_multiple_files = true;
option java_outer_classname = "CollectionServiceProtoFile";
option java_package = "com.google.security.dataprotection.collection";

service SecureDataCollectionPublisher {
    rpc Publish(PublishRequest) returns (PublishResponse);
    rpc PublishWindowed(PublishWindowedRequest) returns (PublishResponse);
}

message PublishRequest {
    repeated Message messages = 1;
    
    optional Environment environment = 2;
    enum Environment {
        ENVIRONMENT_UNSPECIFIED = 0;
        PROD = 1;
        DEV = 2;
    }
    
    optional ClientProvidedSourceFields client_provided_source_fields = 4;
    
    reserved 3;
}

message PublishWindowedRequest {
    optional string drip_name = 1;
    optional Message message = 2;
    optional PublishRequest.Environment environment = 3;
    
    optional AggregationStrategy aggregation_strategy = 4;
    enum AggregationStrategy {
        STRATEGY_UNSPECIFIED = 0;
        PICK_LATEST = 1;
        BATCH_AND_DEDUP = 2;
    }
    
    optional ClientProvidedSourceFields client_provided_source_fields = 5;
}

message Message {
    optional string table_name = 1 [ctype = CORD];
    optional string dedup_key = 3 [ctype = CORD];
    optional google.protobuf.Any data = 4;
    
    reserved 2;
}

message MessageSource {
    optional bool is_borg_job = 1;
    optional string borg_cell = 2;
    optional string user = 3;
    optional string job_name = 4;
    optional int32 borg_task_index = 5;
    optional string host = 6;
    optional string blaze_build_target = 7;
    optional int64 piper_cl = 8;
    optional int64 borg_job_uid = 10;
    optional int64 borg_task_uid = 11;
    
    optional AggregatorType aggregator_type = 9;
    enum AggregatorType {
        UNSPECIFIED = 0;
        PROXY = 1;
        RETSA = 2;
    }
}

message PublishResponse {
    
}

message ClientProvidedSourceFields {
    optional string job_name = 1;
    optional string build_target = 2;
    optional int64 piper_cl = 3;
    optional int64 borg_job_uid = 4;
    optional int64 borg_task_uid = 5;
}

message WindowKey {
    optional string drip_name = 1;
    optional ClientProvidedSourceFields source_fields = 2;
}
