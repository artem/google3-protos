syntax = "proto3";

package secure_collection;

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "security/dataprotection/collection/public/collection_service.proto";
import "storage/datapol/annotations/proto/semantic_annotations.proto";

option cc_enable_arenas = true;

service AggregationService {
    rpc Publish(AggregationPublishRequest) returns (AggregationPublishResponse);
    rpc AdminKillswitch(AdminKillswitchRequest) returns (AdminKillswitchResponse);
}

message AggregationPublishRequest {
    repeated AggregationMessage messages = 1;
    bool fire_and_forget = 2;
    ClientProvidedSourceFields client_provided_source_fields = 3;
}

message AggregationMessage {
    string table_name = 1 [ctype = CORD];
    google.protobuf.Timestamp publish_time = 2;
    string dedup_key = 3 [ctype = CORD];
    google.protobuf.Any data = 4;
}

message AggregationPublishResponse {
    
}

message AdminKillswitchRequest {
    KillswitchCommand command = 1;
    enum KillswitchCommand {
        DEFAULT = 0;
        REVERT_KILLSWITCH = 1;
        RESPOND_WITH_TRANSIENT_ERROR = 2;
        REQUEST_ALL_CLIENTS_ABORT_PUBLISHING = 3;
    }
}

message AdminKillswitchResponse {
    
}

message MessageSourcePatch {
    MessageSource message_source = 1;
}
