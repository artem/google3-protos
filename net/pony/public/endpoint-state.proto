syntax = "editions";

package net_pony;

import "net/pony/internal/queues.proto";

message CompletionQueueState {
    optional int32 notifier_fd_index = 1 [default = -1, deprecated = true];
    optional int32 pipe_fd_index = 2 [default = -1, deprecated = true];
    optional uint64 rx_pipe_recovery_token_head = 3 [deprecated = true];
    optional uint32 sequence_number = 4;
    optional int64 offset = 5 [deprecated = true];
    optional uint32 completion_pages = 6 [deprecated = true];
    optional proto.CompletionRx rx = 7;
}

message CommandQueueState {
    optional int32 pipe_fd_index = 2 [default = -1, deprecated = true];
    optional uint64 tx_pipe_recovery_token_head = 3 [deprecated = true];
    optional uint64 tx_pipe_recovery_token_tail = 4 [deprecated = true];
    optional int64 offset = 5 [deprecated = true];
    optional uint32 command_pages = 6 [deprecated = true];
    optional proto.CommandTx tx = 7;
}

message ControlClientState {
    optional string path = 1;
    optional uint32 control_timeout_ms = 2;
    optional int32 broker_fd_index = 3 [default = -1];
    repeated int32 engine_notifier_fd_index = 4;
    repeated int32 command_queue_to_engine = 5;
    optional uint32 station_handle = 6;
    optional string client_details = 7;
    optional int32 control_update_watcher_read_fd_index = 9 [default = -1];
}

message EndpointState {
    optional ControlClientState pony_control_client_state = 1;
    repeated CompletionQueueState completion_queue_states = 2;
    repeated CommandQueueState command_queue_states = 3;
    optional int32 releaser_version = 5;
    optional proto.SharedEndpointQueueState shared_queue_state = 6;
    optional int32 previous_stripe = 7 [default = -1];
    optional bool client_stripe_round_robin = 8 [default = false];
    optional bool appaloosa_command_steering = 9 [default = false];
    optional int32 endpoint_engine_team_size = 10;
    optional bool shard_completion_queues = 11;
    optional bool enable_use_new_engines = 12;
    
    reserved 4;
}
