syntax = "proto2";

import "net/proto2/bridge/proto/message_set.proto";
import "net/rpc/census-context.proto";
import "net/rpc/rpc.proto";
import "net/rpc/stream.proto";
import "perftools/tracing/proto/rpc_traced_request.proto";
package net.rpc4;

message RpcRequest {
  optional int32 type = 1 [default = 0];
  optional fixed64 id = 2;
  optional string method = 3 [ctype = STRING_PIECE];
  optional double deadline = 4 [default = 0];
  optional bool suppress_dups = 5 [default = false];
  optional int32 trace_mask = 6 [default = 0];
  optional fixed64 global_id = 7;
  optional .perftools.tracing.RPCTracedRequest traced_info = 18;
  optional .rpc.CensusContext census_context = 11;
  optional int32 desired_format = 8;
  optional .RPC_SecurityHeader sec_header = 9;
  optional bool streaming = 10 [default = false];
  optional fixed32 checksum = 14;
  optional fixed32 header_checksum = 21;
  optional int32 payload_format = 15;
  optional int32 protocol_version = 16;
  optional .RPC_EnhancedHCRequest enhanced_hc = 17;
  optional uint64 scheduling_hash = 19 [default = 0];
  optional bool disable_response_checksum = 20 [default = false];
  optional bool allow_early_reject = 22 [default = false];
  optional .proto2.bridge.MessageSet request_extensions = 23;
  optional bytes encrypted_extensions = 24;
  optional .rpc.StreamHeader stream_header = 25;
  optional bool payload_display_when_private = 26 [default = false];
  optional int32 original_payload_size = 27;
  optional int32 max_response_payload_size = 28;
  optional int32 method_index = 29;
  optional .EnvelopeForwarderHeader envelope_forwarder_header = 30;
  optional string package_name = 31;
}

message RpcResponse {
  optional int32 type = 1 [default = 0];
  optional int32 status = 2 [default = 0];
  optional fixed64 id = 3;
  optional string error_detail = 4;
  optional int32 app_code = 5 [default = 0];
  optional double server_elapsed = 6;
  optional fixed64 server_id = 7;
  optional double server_start = 8;
  optional bool is_leaf = 9 [default = true];
  optional int32 payload_format = 10;
  optional .RPC_SecurityHeader sec_header = 11;
  optional bool final_response = 12 [default = true];
  optional int32 seqno = 13 [default = 0];
  optional fixed32 checksum = 14;
  optional int32 protocol_version = 15;
  optional .RPC_EnhancedHCResponse enhanced_hc = 16;
  optional int32 error_code = 17;
  optional string error_space = 18;
  optional .proto2.bridge.MessageSet error_payload = 19;
  optional int32 canonical_code = 24;
  optional fixed32 header_checksum = 21;
  optional .proto2.bridge.MessageSet response_extensions = 22;
  optional .rpc.StreamHeader stream_header = 23;
  optional int32 original_payload_size = 25;
}


